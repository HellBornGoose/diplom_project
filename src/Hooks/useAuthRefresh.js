import { useEffect, useRef, useCallback } from 'react';
import { useLocation } from 'react-router-dom';
import { NGROK_URL } from './config';

export function useAuthRefresh(isAuthenticated) {
  const location = useLocation();
  const refreshTimeout = useRef(null);

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è JWT
  const refreshJWT = useCallback(async () => {
    const refreshToken = localStorage.getItem('refreshToken'); //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ—Ñ—Ä–µ—à—Ç–æ–∫–µ–Ω
    if (!refreshToken) {
      console.warn('[AuthRefresh] –ù–µ—Ç refreshToken –≤ localStorage');
      return;
    }

    try {
      const response = await fetch(`${NGROK_URL}/api/Auth/refresh`, { //–∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ—Ñ—Ä–µ—à
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ refreshToken }),
      });

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${response.status}`);
      }

      const data = await response.json();
      const { jwtToken, refreshToken: newRefreshToken } = data;

      localStorage.setItem('jwtToken', jwtToken);
      localStorage.setItem('refreshToken', newRefreshToken);

      console.log('[refreshJWT] –æ–±–Ω–æ–≤–ª—ë–Ω —É—Å–ø–µ—à–Ω–æ');
      startTokenRefreshTimer(); // —Ç–∞–π–º–µ—Ä –∏–¥–µ—Ç –∑–∞–Ω–æ–≤–æ
    } catch (error) {
      console.error('[refreshJWT] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–µ:', error);
    }
  }, []);

  // –¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
  const startTokenRefreshTimer = useCallback(() => {
    const timeoutMs = 14 * 60 * 1000; // 14 –º–∏–Ω—É—Ç, –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏–ª–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è- –ø–æ–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ "14" –Ω–∞ –∂–µ–ª–∞–µ–º–æ–µ. –ò —Å—Ç–æ–ª—å–∫–æ –±—É–¥–µ—Ç –º–∏–Ω—É—Ç

    if (refreshTimeout.current) clearTimeout(refreshTimeout.current);

    console.log(`[startTokenRefreshTimer] –û—Å—Ç–∞–ª–æ—Å—å ${timeoutMs / 1000 / 60} –º–∏–Ω—É—Ç –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ä–æ–∫–∞ –∂–∏–∑–Ω–∏ JWT`);

    refreshTimeout.current = setTimeout(() => { //—Ç–∞–π–º–µ—Ä –∏—Å—Ç–µ–∫, –∑–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      refreshJWT().catch(err =>
        console.error('[startTokenRefreshTimer] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', err)
      );
    }, timeoutMs);
  }, [refreshJWT]);

const maybeRefresh = useCallback(async () => {
  const jwtToken = localStorage.getItem('jwtToken');
  if (!jwtToken) {
    console.warn('[maybeRefresh] –ù–µ—Ç jwtToken');
    return;
  }

  const payloadBase64 = jwtToken.split('.')[1];
  if (!payloadBase64) {
    console.warn('[maybeRefresh] JWT —Ç–æ–∫–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
    return;
  }

  try {
    const payloadJson = atob(payloadBase64);
    const payload = JSON.parse(payloadJson);
    const exp = payload.exp;
    if (!exp) {
      console.warn('[maybeRefresh] –ù–µ—Ç –ø–æ–ª—è exp –≤ —Ç–æ–∫–µ–Ω–µ');
      return;
    }

    const expMs = exp * 1000;
    const nowMs = Date.now();
    const diffMs = expMs - nowMs;

    if (diffMs < 60 * 1000) {
      console.log('[maybeRefresh] –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω, —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫');
      await refreshJWT();
    } else {
      console.log(`[maybeRefresh] –¢–æ–∫–µ–Ω –µ—â—ë –≤–∞–ª–∏–¥–µ–Ω. –î–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è: ${Math.round(diffMs / 1000)} —Å–µ–∫`);
    }
  } catch (err) {
    console.error('[maybeRefresh] –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JWT:', err);
  }
}, [refreshJWT]);


  // –ü—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü- –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –µ—Å–ª–∏ –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ —Ç–æ–∫–µ–Ω–∞- –æ–±–Ω–æ–≤–ª—è–µ–º
  useEffect(() => {
    if (!isAuthenticated) return;
    console.log('[useEffect] –ù–∞–≤–∏–≥–∞—Ü–∏—è. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞...');
    maybeRefresh();
  }, [location.pathname, isAuthenticated, maybeRefresh]);

  // –ü—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî —Å—Ç–∞—Ä—Ç—É–µ–º —Ç–∞–π–º–µ—Ä
  useEffect(() => {
    if (!isAuthenticated) return;

    console.log('[useEffect] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞...');
    startTokenRefreshTimer();

    return () => {
      if (refreshTimeout.current) {
        clearTimeout(refreshTimeout.current);
        console.log('[useEffect] üßπ –¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –æ—á–∏—â–µ–Ω');
      }
    };
  }, [isAuthenticated, startTokenRefreshTimer]);

  return { refreshJWT, maybeRefresh };
}
